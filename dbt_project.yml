
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'flight_demo_dbt'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'flight_demo_dbt'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

on-run-start: 
  - CREATE SCHEMA IF NOT EXISTS logs;
  - CREATE TABLE if not exists logs.log_table (id varchar(50), start_at timestamp, end_at timestamp, model_name text, run_duration float);
  - " {{ run_log('insert','general') }} "
on-run-end: 
  - " {{ run_log('update','general') }} "

models:
  flight_demo_dbt:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view
      +enable: False
    dim:
      +materialized: incremental
      +schema: dim
      +pre-hook: "{{ run_log('insert', this.name) }}"
      +post-hook: "{{ run_log('update', this.name) }}"
    fact:
      +materialized: incremental
      +schema: fact
      +pre-hook: "{{ run_log('insert', this.name) }}"
      +post-hook: "{{ run_log('update', this.name) }}"